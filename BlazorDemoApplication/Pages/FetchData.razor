@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using BlazorDemoApplication.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
  <div>
        <MudAvatar Class="z-30 ma-n2" Color="Color.Primary" Size="Size.Large">M</MudAvatar>
        <MudAvatar Class="z-20 ma-n2" Color="Color.Secondary" Size="Size.Large">U</MudAvatar>
        <MudAvatar Class="z-10 ma-n2" Color="Color.Tertiary" Size="Size.Large">D</MudAvatar>
    </div> 

     <div>
        <div class="d-flex flex-wrap gap-4">
            @foreach (var cursor in Cursors)
            {
                <MudPaper Class="@($"d-flex justify-center align-center {cursor}")" Width="128px" Height="64px">
                    @cursor
                </MudPaper>
            }
        </div>

        @code {
        string[] Cursors = new[]
        {
    "cursor-all-scroll", "cursor-auto", "cursor-cell", "cursor-col-resize", "cursor-copy", "cursor-crosshair", "cursor-default", "cursor-grab", "cursor-grabbing", "cursor-help", "cursor-move", "cursor-no-drop", "cursor-none", "cursor-not-allowed", "cursor-n-resize", "cursor-pointer", "cursor-progress", "cursor-row-resize", "cursor-text", "cursor-url", "cursor-vertical-text", "cursor-wait", "cursor-w-resize", "cursor-zoom-in", "cursor-zoom-out"
    };
    }

    </div> 
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
